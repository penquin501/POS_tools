{"remainingRequest":"/Users/nattharee/new_parcel_tools/webapp/vue-src/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/nattharee/new_parcel_tools/webapp/vue-src/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nattharee/new_parcel_tools/webapp/vue-src/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nattharee/new_parcel_tools/webapp/vue-src/src/components/main.vue?vue&type=template&id=5c886d6e&","dependencies":[{"path":"/Users/nattharee/new_parcel_tools/webapp/vue-src/src/components/main.vue","mtime":1581736151890},{"path":"/Users/nattharee/new_parcel_tools/webapp/vue-src/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nattharee/new_parcel_tools/webapp/vue-src/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/nattharee/new_parcel_tools/webapp/vue-src/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nattharee/new_parcel_tools/webapp/vue-src/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}